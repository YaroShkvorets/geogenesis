services:
  postgres:
    image: postgres:13.6
    environment:
      POSTGRES_USER: ${GEO_DB_USER:-geo}
      POSTGRES_PASSWORD: ${GEO_DB_PASSWORD:-let-me-in}
      POSTGRES_DB: ${GEO_DB_NAME:-geo}
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
    ports:
      - "${GEO_DB_PORT:-5432}:5432"
    stop_signal: SIGKILL
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 10s
      retries: 15
    volumes:
      - geo_postgres_data:/var/lib/postgresql/data

  sink:
    build:
      context: .
      dockerfile: docker/Substream.Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AUTH_ISSUE_URL: ${AUTH_ISSUE_URL:-https://auth.pinax.network/v1/auth/issue}
      SUBSTREAMS_ENDPOINT: ${SUBSTREAMS_ENDPOINT:?SUBSTREAMS_ENDPOINT is not set}
      SUBSTREAMS_API_KEY: ${SUBSTREAMS_API_KEY:?SUBSTREAMS_API_KEY is not set}
      DATABASE_URL: postgres://${GEO_DB_USER}:${GEO_DB_PASSWORD}@postgres:5432/${GEO_DB_NAME}?sslmode=disable
      START_BLOCK: ${START_BLOCK}

  api:
    build:
      context: .
      dockerfile: docker/Api.Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://${GEO_DB_USER}:${GEO_DB_PASSWORD}@postgres:5432/${GEO_DB_NAME}?sslmode=disable
      CHAIN_RPC: ${CHAIN_RPC:?CHAIN_RPC is not set}
      GEO_SUBGRAPH_DEPLOYMENT_ID: ${GEO_SUBGRAPH_DEPLOYMENT_ID}
      PORT: 5001
    ports:
      - "${GEO_PORT:-5001}:5001"

volumes:
  geo_postgres_data: {}
