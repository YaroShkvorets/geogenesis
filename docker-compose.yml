services:
  postgres:
    container_name: geo-postgres
    image: postgres:14
    environment:
      POSTGRES_USER: ${GEO_DB_USER:-geo}
      POSTGRES_PASSWORD: ${GEO_DB_PASSWORD:-let-me-in}
      POSTGRES_DB: ${GEO_DB_NAME:-geo}
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
    ports:
      - "5432:5432"
    stop_signal: SIGKILL
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 10s
      retries: 15

  pgweb:
    container_name: geo-pgweb
    image: sosedoff/pgweb:0.11.12
    environment:
      DATABASE_URL: postgres://${GEO_DB_USER}:${GEO_DB_PASSWORD}@postgres:5432/${GEO_DB_NAME}?sslmode=disable
    restart: on-failure
    stop_signal: SIGKILL
    ports:
      - "8081:8081"
    command:
      [
        "pgweb",
        "--bind=0.0.0.0",
        "--listen=8081",
        "--binary-codec=hex"
      ]
    links:
      - postgres:postgres
    depends_on:
      postgres:
        condition: service_healthy

  sink:
    container_name: geo-sink
    build:
      context: .
      dockerfile: docker/Substream.Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AUTH_ISSUE_URL: https://auth.pinax.network/v1/auth/issue
      SUBSTREAMS_ENDPOINT: ${SUBSTREAMS_ENDPOINT}
      SUBSTREAMS_API_KEY: ${SUBSTREAMS_API_KEY:?SUBSTREAMS_API_KEY is not set}
      DATABASE_URL: postgres://${GEO_DB_USER}:${GEO_DB_PASSWORD}@postgres:5432/${GEO_DB_NAME}?sslmode=disable
    command: node /app/packages/substream/dist/index.js --start-block 620

  api:
    container_name: geo-api
    build:
      context: .
      dockerfile: docker/Api.Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://${GEO_DB_USER}:${GEO_DB_PASSWORD}@postgres:5432/${GEO_DB_NAME}?sslmode=disable
      CHAIN_RPC: ${CHAIN_RPC:-http://geotest-arch45.mar.eosn.io:8449}
      PORT: 5001
    ports:
      - "${GEO_PORT:-5001}:5001"
